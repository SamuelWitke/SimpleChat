{"version":3,"sources":["containers/Join.js","actions/index.js","models/message-types.js","containers/Message.js","models/index.js","components/Message.js","utils/timeSince.js","containers/MessageList.js","App.js","serviceWorker.js","reducers/index.js","sockets.js","store/index.js","store/configureStore.prod.js","components/Error.js","index.js"],"names":["JoinForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onJoinClick","event","preventDefault","joinFn","_this$state","state","name","valid","checkName","target","value","length","setState","type","keyCode","react_default","a","createElement","maxLength","placeholder","onKeyDown","onChange","onClick","disabled","Component","connect","dispatch","getState","_ref","send","join","SendMessageForm","onSendClick","message","sendMessageFn","key","className","_ref2","sendMessage","components_Message","createdAt","style","marginRight","date","elapsed","Date","now","seconds","Math","floor","interval","timeSince","MessageList","messageList","scrollTop","scrollHeight","messages","ref","e","map","i","id","user","App","Join","Message","containers_MessageList","Boolean","window","location","hostname","match","handlers","_handlers","defineProperty","currentUser","payload","objectSpread","users","concat","_ref3","metadata","_ref4","_ref5","userId","filter","_ref6","reducers","arguments","undefined","_ref7","handler","Singleton","instance","getInstance","AppConfig","PROTOCOL","HOST","PORT","getSocket","WebSocket","init","setupWebsocket","Promise","resolve","reject","webSocket","receive","onMessageCb","onmessage","JSON","parse","data","stringify","onopen","onclose","close","Error","src_store","initialState","then","middleware","thunkMiddleware","withExtraArgument","store","createStore","rootReducer","applyMiddleware","apply","requestUsers","catch","prod","storeWeb","components_Error","setupStore","ReactDOM","render","es","src_App_0","document","getElementById","error","toString","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.28e1da5a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { join } from \"../actions\";\n\nclass JoinForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { valid: false, name: null };\n  }\n\n  onJoinClick = (event) => {\n    event.preventDefault();\n    const { joinFn } = this.props;\n    const { name, valid} = this.state;\n    if (valid) {\n      return;\n    }\n    joinFn(name);\n  }\n\n  checkName = (event) => {\n    const name = event.target.value;\n    const valid = name && name.length > 0;\n    const { joinFn} = this.props;\n\n    this.setState({ valid, name });\n\n    // if the enter key was pressed and the form is valid, submit it\n    if (valid && event.type === \"keydown\" && event.keyCode === 13) {\n      joinFn(name);\n    }\n  }\n\n  render() {\n    const { valid} = this.state;\n    \n\n    return (\n      <div>\n        <input\n          type=\"text\"\n          maxLength=\"20\"\n          placeholder=\"Your name\"\n          onKeyDown={this.checkName}\n          onChange={this.checkName}\n        />\n        <button onClick={this.onJoinClick} disabled={valid}>\n          Join\n        </button>\n      </div>\n    );\n  }\n}\n\n\nexport default connect(\n  null,\n  (dispatch) => ({\n    joinFn: (name) => dispatch(join(name)),\n  })\n)(JoinForm);","import {\n    joinRequested,\n    messageAdded,\n    usersRequested,\n  } from \"../models/message-types\";\n  import {\n    messageSendRequested,\n  } from \"../models/index\";\n  \n  export const requestUsers = (send) => send(usersRequested);\n  \n  export const join = (name) => (dispatch, getState, { send }) => {\n    send(joinRequested, { name });\n  };\n  \n  export const sendMessage = (message) => (dispatch, getState, { send }) => {\n  \n    dispatch({ type: messageSendRequested });\n    send(messageAdded, { message });\n  };\n  \n  \n  ","export const userJoined = \"userJoined\";\nexport const userLeft = \"userLeft\";\nexport const joinRequested= \"joinRequested\";\nexport const usersRequested= \"usersRequested\";\nexport const messageAdded= \"messageAdded\";","import React, { Component } from \"react\";\nimport { sendMessage } from \"../actions\";\nimport { connect } from \"react-redux\";\n\nclass SendMessageForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { valid: false, name: null };\n  }\n\n  onSendClick = (event) => {\n    event.preventDefault();\n    const { message, valid, } = this.state;\n    const { sendMessageFn } = this.props;\n    if (!valid || !message || message.length === 0) {\n      return;\n    }\n\n    sendMessageFn(message);\n    this.setState({ valid: false, message: \"\" });\n  }\n\n  onChange = (event) => {\n    const message = event.target.value;\n    const valid = message && message.length > 0;\n    this.setState({ valid, message });\n  }\n\n  onKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      return this.onSendClick(event);\n    }\n  }\n\n  render() {\n    const { valid } = this.state;\n\n    return (\n      <div>\n        <input\n          className=\"send-message-form-input\"\n          placeholder=\"Say something nice\"\n          maxLength=\"200\"\n          onChange={this.onChange}\n          onKeyDown={this.onKeyDown}\n        />\n        <button onClick={this.onSendClick} disabled={!valid}>\n          Send\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n(dispatch) => ({\n  sendMessageFn: (message) => dispatch(sendMessage(message)),\n})\n)(SendMessageForm);","export const messageSendRequested = \"messageSendRequested\";","import React from \"react\";\nimport timeSince from '../utils/timeSince';\n\nexport default ({ name, createdAt, message }) => (\n  <div className=\"message\">\n    <span style={name && { marginRight: \"5px\" }}>{name && name + \":\"}</span>\n    <span className=\"text\">{message}</span>\n    <span className=\"created-at\">{timeSince(createdAt)}</span>\n  </div>\n);\n","export default (date) => {\n    const elapsed = Date.now() - date;\n    if (elapsed < 5000) {\n      return \"just now\";\n    }\n  \n    const seconds = Math.floor(elapsed / 1000);\n    let interval = Math.floor(seconds / 31536000);\n  \n    if (interval > 1) {\n      return interval + \" yrs ago\";\n    }\n  \n    interval = Math.floor(seconds / 2592000);\n    if (interval > 1) {\n      return interval + \" mon ago\";\n    }\n  \n    interval = Math.floor(seconds / 86400);\n    if (interval > 1) {\n      return interval + \" days ago\";\n    }\n  \n    interval = Math.floor(seconds / 3600);\n    if (interval > 1) {\n      return interval + \" hr ago\";\n    }\n  \n    interval = Math.floor(seconds / 60);\n    if (interval > 1) {\n      return interval + \" min ago\";\n    }\n  \n    return Math.floor(seconds) + \" sec ago\";\n  };\n  ","import React, { Component } from \"react\";\nimport Message from \"../components/Message\";\nimport { connect } from \"react-redux\";\n\nclass MessageList extends Component {\n  componentDidUpdate() {\n    this.messageList.scrollTop = this.messageList.scrollHeight;\n  }\n\n  render() {\n    const { messages } = this.props;\n\n    return (\n      <div className=\"message-list\">\n        <strong>Messages</strong>\n        <div\n          className=\"messages-list\"\n          ref={(e) => {\n            this.messageList = e;\n          }}\n        >\n          {messages.map(({ id, user, message, createdAt },i) => (\n            <span key={i}>\n            <Message\n              key={id}\n              name={user && user.name}\n              createdAt={createdAt}\n              message={message}\n            />\n            </span>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n({ messages }) => ({ messages })\n)(MessageList);","import React, { Component } from 'react';\nimport './App.css';\nimport Join from './containers/Join';\nimport Message from './containers/Message';\nimport MessageList from './containers/MessageList';\n\nclass App extends Component {\n render() {\n    return (\n      <section id=\"page\">\n        <header>Header</header>\n        <nav><Join/><Message/></nav>\n        <main><MessageList/></main>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    joinRequested,\n    messageAdded,\n    userJoined,\n    userLeft,\n    usersRequested,\n  } from \"../models/message-types\";\n  \n  const handlers = {\n    [joinRequested]: ({ state, payload: currentUser }) => ({\n      ...state,\n      currentUser,\n    }),\n    // Note: currentUser is already in users\n    [userJoined]: ({ state, payload: user }) => ({\n      ...state,\n      users: state.users.concat([user]),\n    }),\n    [messageAdded]: ({ state, payload: message, metadata: { createdAt } }) => ({\n      ...state,\n      messages: state.messages.concat([{ ...message, createdAt }]),\n    }),\n    [usersRequested]: ({ state, payload: users }) => ({\n      ...state,\n      users,\n    }),\n    [userLeft]: ({ state, payload: { userId } }) => ({\n      ...state,\n      users: state.users.filter(({ id }) => id !== userId),\n    }),\n  };\n  \n  export default (state = {}, { type, payload, metadata }) => {\n    const handler = handlers[type];\n    if (handler) {\n      return handler({ state, payload, metadata });\n    }\n  \n    return state;\n  };","const Singleton = (() => {\n    // Instance stores a reference to the Singleton\n    var instance;\n   \n    function init() {\n      // Singleton\n   \n      // Private methods and variables\n     const AppConfig = {\n        PROTOCOL: \"ws\",\n        HOST: \"localhost\",\n        PORT: \"9000/\"\n      }\n      if(process.env.NODE_ENV === \"production\"){\n         AppConfig.HOST = \"\"; \n      }\n   \n      return {\n        // Public methods and variables\n        getSocket: function() {\n          return new WebSocket(`${AppConfig.PROTOCOL}://${AppConfig.HOST}:${AppConfig.PORT}`);\n        }\n   \n      };\n   \n    };\n   \n    return {\n   \n      // Get the Singleton instance if one exists\n      // or create one if it doesn't\n      getInstance: function () {\n        if ( !instance ) {\n          instance = init();\n        }\n   \n        return instance.getSocket();\n      }\n   \n    };\n   \n  })();\n\n  export const setupWebsocket = () =>\n  new Promise((resolve, reject) => {\n    const webSocket = Singleton.getInstance();\n    const receive = (onMessageCb) => {\n      webSocket.onmessage = (event) => onMessageCb(JSON.parse(event.data));\n    };\n\n    const send = (type, payload) =>\n      webSocket.send(JSON.stringify({ type, payload }));\n\n    webSocket.onopen = () => resolve({ send, receive });\n    webSocket.onclose = () => {\n      webSocket.close();\n      reject(new Error(\"WebSocket Closed\"));\n    }\n  });\n","import dev from \"./configureStore.dev\";\nimport prod from \"./configureStore.prod\";\n\nexport default new Promise( (resolve,reject) => {\nif (process.env.NODE_ENV === \"production\") {\n    resolve(prod().then((storeWeb) => storeWeb))\n} else {\n    resolve(dev().then((storeWeb) => storeWeb )).catch(e => {throw e});\n}\n})","import { createStore,  applyMiddleware } from 'redux'\nimport rootReducer from '../reducers'\nimport thunkMiddleware from \"redux-thunk\";\nimport { setupWebsocket } from \"../sockets\";\nimport { requestUsers } from \"../actions\";\n\nexport default () => {\n    const initialState = {\n        messages: [],\n        users: [],\n        currentUser: null,\n    };\n\n\n      return setupWebsocket().then(({ send, receive }) => {\n        const middleware=[(thunkMiddleware.withExtraArgument({ send }))];\n\n        const store = createStore(\n            rootReducer,\n            initialState,\n            applyMiddleware(...middleware),\n        );\n\n         receive(store.dispatch);\n         requestUsers(send);\n        return store;\n    }).catch( e => {throw e});\n\n};","import React from 'react'\n\nexport default (Error) => {\n  return (\n    <div>\n     {JSON.stringify(Error)}\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport setupStore from './store/index';\nimport { Provider } from \"react-redux\";\nimport Error from './components/Error';\n\nsetupStore.then((store) => (\n  ReactDOM.render(\n      <Provider store={store}>\n        <App />\n      </Provider>,\n  document.getElementById('root'))\n  )).catch( (e) => {\n    return (\n  ReactDOM.render(\n  <Error error ={e.toString()}/>,\n  document.getElementById('root'))\n    )\n  });\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}